@mixin flexible() {
  display: flex;
  justify-content: center;
  align-items: center;
}

@function color($key) {
  @if map-has-key($colors, $key) {
    @return map-get($colors, $key);
  }
  @warn "Unknown `#{$key}` in $colors.";
  @return null;
}

* {
  box-sizing: border-box;
}

.active {
  background-color: rgba(46, 170, 46, 0.5);
}

.circle {
  width: 100%;
  height: 100%;
  stroke-dasharray: 283;
  stroke-dashoffset: 283;
  animation: draw 1s forwards;
}

@keyframes draw{
  100% {
    stroke-dashoffset: 0;
  }
}

.cross {
  width: 100%;
  height: 100%;
  
  animation: draw 1s forwards;
}

.first {
  stroke-dasharray: 125;
  stroke-dashoffset: 125;
  animation: draw 0.6s forwards;
}

.second {
  stroke-dasharray: 125;
  stroke-dashoffset: 125;
  animation: draw 0.6s 0.3s forwards;
}

body {
  height: 100vh;
  @include flexible();
  flex-direction: column;
  background: linear-gradient(rgba(0, 0, 0, 0.4), transparent 1px), 
  linear-gradient(90deg, rgba(0, 0, 0, 0.4), transparent 1px);
  background-size: 50px 50px;
  .res {
    color: green;
    font-weight: bold;
    font-size: 40px;
    font-family: 'Franklin Gothic Medium', 'Arial Narrow', Arial, sans-serif;
    height: 50px;
  }
  .container {
    width: 360px;
    height: 360px;
    display: flex;
    flex-wrap: wrap;
    margin: 30px 0;
    outline: 3px solid #000000;
    .block {
      width: 120px;
      height: 120px;
      border: 2px solid #000000;
      cursor: pointer;
    }
  }
  .start {
    border: none;
    color: azure;
    background-color: green;
    padding: 10px 16px;
    font-size: 20px;
    border-radius: 3px;
    cursor: pointer;
  }
}
